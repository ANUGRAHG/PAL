SET SCHEMA PAL;

-- PAL setup

CREATE TYPE PAL_T_TS_DATA AS TABLE (CALENDAR_ID INT, SALES_AMOUNT DOUBLE);
CREATE TYPE PAL_T_TS_PARAMS AS TABLE (NAME VARCHAR(60), INTARGS INTEGER, DOUBLEARGS DOUBLE, STRINGARGS VARCHAR (100));
CREATE TYPE PAL_T_TS_RESULTS AS TABLE (CALENDAR_ID INT, SALES_AMOUNT DOUBLE);

CREATE COLUMN TABLE PAL_TS_SIGNATURE (ID INTEGER, TYPENAME VARCHAR(100), DIRECTION VARCHAR(100));
INSERT INTO PAL_TS_SIGNATURE VALUES (1, 'PAL.PAL_T_TS_DATA', 'in');
INSERT INTO PAL_TS_SIGNATURE VALUES (2, 'PAL.PAL_T_TS_PARAMS', 'in');
INSERT INTO PAL_TS_SIGNATURE VALUES (3, 'PAL.PAL_T_TS_RESULTS', 'out');

CALL SYSTEM.AFL_WRAPPER_GENERATOR ('PAL_TS_S', 'AFLPAL', 'SINGLESMOOTH', PAL_TS_SIGNATURE);

-- app setup

CREATE VIEW V_TS_DATA AS 
	SELECT CALENDAR_ID, SUM(SALES_AMOUNT) AS SALES_AMOUNT 
		FROM ORDER_FACTS
		WHERE ITEM_ID BETWEEN 0 AND 9
		GROUP BY CALENDAR_ID 
		ORDER BY CALENDAR_ID
	;
CREATE COLUMN TABLE TS_PARAMS LIKE PAL_T_TS_PARAMS;
CREATE COLUMN TABLE TS_RESULTS LIKE PAL_T_TS_RESULTS;
CREATE VIEW V_TS_RESULTS AS
	SELECT 
		CASE WHEN a.CALENDAR_ID IS NOT NULL THEN a.CALENDAR_ID ELSE b.CALENDAR_ID END AS CALENDAR_ID, 
		a.SALES_AMOUNT, 
		ROUND(b.SALES_AMOUNT) AS SALES_AMOUNT_PREDICTED 
	 FROM V_TS_DATA a 
	 FULL JOIN TS_RESULTS b ON (a.CALENDAR_ID=b.CALENDAR_ID) 
	 ;

INSERT INTO TS_PARAMS VALUES ('RAW_DATA_COL' ,1, null, null);
INSERT INTO TS_PARAMS VALUES ('ALPHA', null, 0.1, null);
INSERT INTO TS_PARAMS VALUES ('STARTTIME', 0, null, null);

-- app runtime

UPDATE TS_PARAMS SET DOUBLEARGS=0.3 WHERE NAME='ALPHA';
UPDATE TS_PARAMS SET INTARGS=1 WHERE NAME='STARTTIME';

TRUNCATE TABLE TS_RESULTS;

CALL _SYS_AFL.PAL_TS_S (V_TS_DATA, TS_PARAMS, TS_RESULTS) WITH OVERVIEW;
