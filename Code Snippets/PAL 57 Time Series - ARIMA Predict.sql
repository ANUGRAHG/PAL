SET SCHEMA PAL;

-- cleanup
DROP TYPE PAL_T_TS_RESULTS;
DROP TABLE PAL_TS_SIGNATURE;
CALL SYSTEM.AFL_WRAPPER_ERASER ('PAL_TSP');
DROP TABLE TS_RESULTS;
DROP VIEW V_TS_RESULTS;

-- PAL setup
CREATE TYPE PAL_T_TS_RESULTS AS TABLE(ID INTEGER, PRICE DOUBLE, LOW80 DOUBLE, HI80 DOUBLE, LOW95 DOUBLE, HI95 DOUBLE);
CREATE COLUMN TABLE PAL_TS_SIGNATURE (ID INTEGER, TYPENAME VARCHAR(100), DIRECTION VARCHAR(100));
INSERT INTO PAL_TS_SIGNATURE VALUES (1, 'PAL.PAL_T_TS_MODEL', 'in');
INSERT INTO PAL_TS_SIGNATURE VALUES (2, 'PAL.PAL_T_TS_PARAMS', 'in');
INSERT INTO PAL_TS_SIGNATURE VALUES (3, 'PAL.PAL_T_TS_RESULTS', 'out');

GRANT SELECT ON PAL_TS_SIGNATURE TO SYSTEM;
CALL SYSTEM.AFL_WRAPPER_GENERATOR ('PAL_TSP', 'AFLPAL', 'ARIMAFORECAST', PAL_TS_SIGNATURE);

-- app setup
CREATE COLUMN TABLE TS_RESULTS LIKE PAL_T_TS_RESULTS;
CREATE VIEW V_TS_RESULTS AS
	SELECT 
		CASE WHEN a.ID IS NOT NULL THEN a.ID ELSE b.ID END AS ID, 
		a.PRICE,
		ROUND(b.PRICE,2) AS PRICE_PREDICTED,
		ROUND(b.LOW80,2) AS LOW80,
		ROUND(b.HI80,2) AS HI80,
		ROUND(b.LOW95,2) AS LOW95,
		ROUND(b.HI95,2) AS HI95
	 FROM STOCKS a 
	 FULL JOIN TS_RESULTS b ON (a.ID=b.ID) 
	;

-- app runtime
DROP TABLE #TS_PARAMS;
CREATE LOCAL TEMPORARY COLUMN TABLE #TS_PARAMS LIKE PAL_T_TS_PARAMS;
INSERT INTO #TS_PARAMS VALUES ('THREAD_NUMBER', 2, null, null);
INSERT INTO #TS_PARAMS VALUES ('ForecastLength', 200, null, null);

TRUNCATE TABLE TS_RESULTS;

CALL _SYS_AFL.PAL_TSP (TS_MODEL, #TS_PARAMS, TS_RESULTS) WITH OVERVIEW;

SELECT * FROM V_TS_RESULTS;
